<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>&gt;ethmcc - mathematics</title><link>https://ethmcc.github.io/</link><description></description><lastBuildDate>Mon, 23 Sep 2024 00:00:00 -0400</lastBuildDate><item><title>Baby Names and Markov Chains</title><link>https://ethmcc.github.io/andreyevich-baby</link><description>&lt;p&gt;Recently I had the pleasure of reading &lt;em&gt;Shape&lt;/em&gt; by Prof. Jordan Ellenberg.
In Chapter 4, he describes Markov's use of his &lt;em&gt;chains&lt;/em&gt;
to model alliteration in Russian poetry.&lt;/p&gt;
&lt;p&gt;Markov is one of the seminal contributors to early constructive mathematics
and recursion theory, the topics of my own research.
The subject …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ethan McCarthy</dc:creator><pubDate>Mon, 23 Sep 2024 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:ethmcc.github.io,2024-09-23:/andreyevich-baby</guid><category>mathematics</category><category>mathematics</category><category>programming</category><category>books</category><category>go</category></item><item><title>A JavaScript Quine, and the recursion theorem</title><link>https://ethmcc.github.io/a-javascript-quine</link><description>&lt;p&gt;I saw the following JavaScript quine (&lt;em&gt;modern&lt;/em&gt; JavaScript: ES6 and up) presented in &lt;a href="https://youtu.be/6avJHaC3C2U?t=1802"&gt;Dylan Beatie's talk at NDC London 2020&lt;/a&gt;: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="sb"&gt;`$=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;;$()`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The same approach can be rendered with a few more parentheses as an &lt;a href="https://duckduckgo.com/?q=!ducky+IIFE"&gt;IIFE&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;()=&amp;gt;&lt;/span&gt;&lt;span class="sb"&gt;`($=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;)()`&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Either way, although this quine is brilliantly short, it's actually fairly easily parseable at sight …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ethan McCarthy</dc:creator><pubDate>Thu, 20 Aug 2020 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:ethmcc.github.io,2020-08-20:/a-javascript-quine</guid><category>mathematics</category><category>javascript</category><category>mathematics</category></item><item><title>On Miracle Sudoku</title><link>https://ethmcc.github.io/miracle-sudoku</link><description>&lt;p&gt;The Miracle Sudoku was introduced by Mitchell Lee, 
who gave a board containing only two given digits, a 1 and a 2.&lt;/p&gt;
&lt;p&gt;I was introduced to this Sudoku variant (and Lee’s board) by 
Simon Anthony of Cracking the Cryptic: &lt;a href="https://www.youtube.com/watch?v=yKf9aUIxdb4" rel="external"&gt;https://www.youtube.com/watch?v=yKf9aUIxdb4&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sudoku and Chess …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ethan McCarthy</dc:creator><pubDate>Mon, 11 May 2020 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:ethmcc.github.io,2020-05-11:/miracle-sudoku</guid><category>mathematics</category><category>sudoku</category><category>exact cover</category><category>project</category></item></channel></rss>